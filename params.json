{"name":"Googlemaps-poi-loader","tagline":"Library that helps you load your Points Of Interests on google map.","body":"# googlemaps-poi-loader\r\nSmall and simple Library that helps you load your Points Of Interests in kml format on your google map.\r\nI decided to test my knowledge of javascript and I've tried to make a library with some basic options.\r\nGoogle maps poi loader may be of use for you if you have a list of POIs you want to load to your map, \r\nand add some functionalities to that list such as loading only POIs of clicked element.\r\n### Usage\r\n\r\nYou must load jquery, in my example I am using version 2.1.3.\r\n\r\n##### HTML structure\r\n\r\n``` HTML\r\n<ul class=\"filters\">\r\n    <li data-layer-url=\"http://happyfist.co/pois/pois/POI/gyms.kml\"><a>Gyms</a></li>\r\n    <li data-layer-url=\"http://happyfist.co/pois/pois/POI/hotels.kml\"><a>Hotels</a></li>\r\n</ul>\r\n\r\n<div id=\"map-canvas\"></div>\r\n\r\n```\r\n\r\nLibrary uses data-layer-uri to get the location of your KML files.\r\n=> NOTE: Location of your KML files must be public, as google needs to read data from them so it could show them on the map.\r\n\r\n##### Javascript\r\n\r\nYou must initialize map by yourself, and pass reference to the map to constructor of library. So for an exmaple you can do this:\r\n\r\n``` javascript\r\nvar map;\r\n        function initialize() {\r\n            map = new google.maps.Map(document.getElementById('map-canvas'), {\r\n                center: new google.maps.LatLng(40.751077, -73.945135),\r\n                zoom: 13,\r\n                mapTypeId: google.maps.MapTypeId.TERRAIN\r\n            });\r\n\r\n            var gm = new gMap({\r\n                map: map,\r\n                filters: $('ul.filters li'),\r\n                filterClickCallback: function() {\r\n                    console.log('filterClickCallback');\r\n                }\r\n            });\r\n\r\n            gm.loadAll();\r\n        }\r\n\r\n        google.maps.event.addDomListener(window, 'load', initialize);\r\n```\r\n\r\nThis portion of code will create initialize a google map for you (and set some options also, so you can actually see POIs)\r\nPart of this code that we are particularly interested is next one: \r\n\r\n``` javascript\r\nvar gm = new gMap({\r\n                map: map,\r\n                filters: $('ul.filters li'),\r\n                filterClickCallback: function() {\r\n                    console.log('filterClickCallback');\r\n                }\r\n            });\r\n\r\n            gm.loadAll();\r\n```\r\n\r\nThis code is initializing our library by sending required parameters to constructor. So, required parameters are\r\n    * Instance of google map object and\r\n    * Array of DOM elements containing data-layer-url attribute. Its content should be exact location of your KML file.","google":"<script>   (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){   (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),   m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)   })(window,document,'script','//www.google-analytics.com/analytics.js','ga');    ga('create', 'UA-47470142-5', 'auto');   ga('send', 'pageview');  </script>","note":"Don't delete this file! It's used internally to help with page regeneration."}